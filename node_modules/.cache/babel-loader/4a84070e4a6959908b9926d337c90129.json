{"ast":null,"code":"import _regeneratorRuntime from \"E:/React/weatherApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"E:/React/weatherApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"E:/React/weatherApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"E:/React/weatherApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"E:\\\\React\\\\weatherApp\\\\src\\\\App.js\",\n    _templateObject,\n    _templateObject2,\n    _templateObject3,\n    _templateObject4,\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useRef } from \"react\";\nimport \"./styles.css\";\nimport styled from \"styled-components\";\nimport WeatherCard from \"./WeatherCard\";\nimport Input from \"./Input\";\nimport Loader from \"./Loader\";\nimport { getGeoLocation, getTemperature } from \"./api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar WeatherMain = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  height: 100%;\\n  margin: 10px;\\n\"])));\n_c = WeatherMain;\nvar Title = styled.h1(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n  font-family: \\\"Dancing Script\\\", cursive;\\n  position: absolute;\\n  top: 60px;\\n  font-weight: 800;\\n\"])));\n_c2 = Title;\nvar SearchInput = styled(Input)(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n  position: absolute;\\n  top: 160px;\\n\"])));\n_c3 = SearchInput;\nvar SearchButton = styled.button(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"\\n  border: none;\\n  outline: none;\\n  cursor: pointer;\\n  font-weight: bold;\\n  height: 30px;\\n  background-color: #fae3e4;\\n  padding: 0 10px;\\n  letter-spacing: 2px;\\n\"])));\n_c4 = SearchButton;\nexport default function App() {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      inputText = _useState2[0],\n      setInputText = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      weatherData = _useState4[0],\n      setWeatherData = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isLoading = _useState6[0],\n      setIsLoading = _useState6[1];\n\n  var long = useRef(null);\n  var lat = useRef(null);\n\n  var init = function init() {\n    // get long/lat of the current location\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(function (res) {\n        long.current = res.coords.longitude;\n        lat.current = res.coords.latitude;\n        getTemp(\"\".concat(lat.current, \",\").concat(long.current));\n      });\n    } else {\n      console.log(\"Geolocation is not supported by this browser.\");\n    }\n  };\n\n  useEffect(function () {\n    init();\n  }, []);\n  useEffect(function () {\n    if (lat.current !== null) {\n      setIsLoading(false);\n    }\n\n    setIsLoading(true);\n  }, [lat.current, long.current]);\n\n  var getTemp = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(city) {\n      var _yield$getTemperature, data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return getTemperature(city);\n\n            case 2:\n              _yield$getTemperature = _context.sent;\n              data = _yield$getTemperature.data;\n              setWeatherData(data);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getTemp(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var onSearchButtonClick = function onSearchButtonClick() {\n    console.log(\"clicked!!!\", inputText);\n    getGeoLocation(inputText).then(function (res) {\n      // get long, lat of the first searched result in the array\n      var _res$data$features$0$ = _slicedToArray(res.data.features[0].center, 2);\n\n      lat.current = _res$data$features$0$[0];\n      long.current = _res$data$features$0$[1];\n      getTemp(\"\".concat(long.current, \",\").concat(lat.current));\n    }).catch(function (e) {\n      console.error(e);\n    });\n  };\n\n  var Search = /*#__PURE__*/_jsxDEV(SearchButton, {\n    onClick: onSearchButtonClick,\n    children: \"Search\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n\n  var showWeather = function showWeather() {\n    return /*#__PURE__*/_jsxDEV(WeatherMain, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: \"The Weather App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(SearchInput, {\n        placeholder: \"Search a city...\",\n        value: inputText,\n        onChange: function onChange(e) {\n          setInputText(e.target.value);\n        },\n        suffix: Search\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(WeatherCard, {\n        weather: weatherData,\n        isLoading: isLoading,\n        setIsLoading: setIsLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, _this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: isLoading ? /*#__PURE__*/_jsxDEV(Loader, {\n      message: \"Loading..\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 20\n    }, this) : showWeather()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"8OHBBjxN+eAvtCHf9sXRKdUOxw4=\");\n\n_c5 = App;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"WeatherMain\");\n$RefreshReg$(_c2, \"Title\");\n$RefreshReg$(_c3, \"SearchInput\");\n$RefreshReg$(_c4, \"SearchButton\");\n$RefreshReg$(_c5, \"App\");","map":{"version":3,"sources":["E:/React/weatherApp/src/App.js"],"names":["useState","useEffect","useRef","styled","WeatherCard","Input","Loader","getGeoLocation","getTemperature","WeatherMain","div","Title","h1","SearchInput","SearchButton","button","App","inputText","setInputText","weatherData","setWeatherData","isLoading","setIsLoading","long","lat","init","navigator","geolocation","getCurrentPosition","res","current","coords","longitude","latitude","getTemp","console","log","city","data","onSearchButtonClick","then","features","center","catch","e","error","Search","showWeather","target","value"],"mappings":"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","sourcesContent":["import { useState, useEffect, useRef } from \"react\";\nimport \"./styles.css\";\nimport styled from \"styled-components\";\nimport WeatherCard from \"./WeatherCard\";\nimport Input from \"./Input\";\nimport Loader from \"./Loader\";\nimport { getGeoLocation, getTemperature } from \"./api\";\n\nconst WeatherMain = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n  margin: 10px;\n`;\n\nconst Title = styled.h1`\n  font-family: \"Dancing Script\", cursive;\n  position: absolute;\n  top: 60px;\n  font-weight: 800;\n`;\n\nconst SearchInput = styled(Input)`\n  position: absolute;\n  top: 160px;\n`;\n\nconst SearchButton = styled.button`\n  border: none;\n  outline: none;\n  cursor: pointer;\n  font-weight: bold;\n  height: 30px;\n  background-color: #fae3e4;\n  padding: 0 10px;\n  letter-spacing: 2px;\n`;\n\nexport default function App() {\n  const [inputText, setInputText] = useState(\"\");\n  const [weatherData, setWeatherData] = useState();\n  const [isLoading, setIsLoading] = useState(true);\n  const long = useRef(null);\n  const lat = useRef(null);\n\n  const init = () => {\n    // get long/lat of the current location\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition((res) => {\n        long.current = res.coords.longitude;\n        lat.current = res.coords.latitude;\n        getTemp(`${lat.current},${long.current}`);\n      });\n    } else {\n      console.log(\"Geolocation is not supported by this browser.\");\n    }\n  };\n\n  useEffect(() => {\n    init();\n  }, []);\n\n  useEffect(() => {\n    if (lat.current !== null) {\n      setIsLoading(false);\n    }\n    setIsLoading(true);\n  }, [lat.current, long.current]);\n\n  const getTemp = async (city) => {\n    const { data } = await getTemperature(city);\n    setWeatherData(data);\n  };\n\n  const onSearchButtonClick = () => {\n    console.log(\"clicked!!!\", inputText);\n    getGeoLocation(inputText)\n      .then((res) => {\n        // get long, lat of the first searched result in the array\n        [lat.current, long.current] = res.data.features[0].center;\n        getTemp(`${long.current},${lat.current}`);\n      })\n      .catch((e) => {\n        console.error(e);\n      });\n  };\n\n  const Search = (\n    <SearchButton onClick={onSearchButtonClick}>Search</SearchButton>\n  );\n\n  const showWeather = () => {\n    return (\n      <WeatherMain>\n        <Title>The Weather App</Title>\n        <SearchInput\n          placeholder=\"Search a city...\"\n          value={inputText}\n          onChange={(e) => {\n            setInputText(e.target.value);\n          }}\n          suffix={Search}\n        />\n        <WeatherCard\n          weather={weatherData}\n          isLoading={isLoading}\n          setIsLoading={setIsLoading}\n        />\n      </WeatherMain>\n    );\n  };\n\n  return (\n    <div className=\"App\">\n      {isLoading ? <Loader message=\"Loading..\" /> : showWeather()}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}